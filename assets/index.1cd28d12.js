import{B as e}from"./vendor.ffdbab8f.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(n){const s=new URL(e,location),o=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((n,r)=>{const i=new URL(e,s);if(self[t].moduleMap[i])return n(self[t].moduleMap[i]);const a=new Blob([`import * as m from '${i}';`,`${t}.moduleMap['${i}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(a),onerror(){r(new Error(`Failed to import: ${e}`)),o(c)},onload(){n(self[t].moduleMap[i]),o(c)}});document.head.appendChild(c)})),self[t].moduleMap={}}}("/assets/");class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`\n      <style>\n      .outer{\n        position: fixed;\n        left: 0;\n        top: 0;\n        width: 100vw;\n        height: 100vh;\n        background-color: #000;\n        ${this.style.cssText}\n      }\n      @keyframes scanner{\n        0%{\n          top: 30%;\n        }\n        100%{\n          top: 70%;\n        }\n      }\n      .line{\n        position: absolute;\n        width: 80%;\n        height: 10px;\n        left: 50%;\n        top: 30%;\n        transform: translate(-50%, -50%);\n        box-shadow: 0 5px 5px 8px rgba(31, 255, 98, 0.753);\n        clip-path: ellipse( 40% 10px at 50% 0px);\n        animation: scanner 2s ease-in-out infinite alternate;\n      }      \n      .video{\n        width: 100%;\n        height: 100%;\n      }\n      .close{\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        left: 5%;\n        top: 5%;\n        padding: 0;\n        border: none;\n        border-radius: 50%;\n      }\n      .close div{\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: 70%;\n        height: 2px;\n        background-color: #000000;\n      }\n      .close div:first-child{\n        transform: translate(-50%, -50%) rotateZ(45deg);\n      }\n      .close div:last-child{\n        transform: translate(-50%, -50%) rotateZ(-45deg);\n      }\n      </style>\n      <div class="outer">\n        <video width="100%" height="100%"></video>\n        <button class="close">\n          <div></div>\n          <div></div> \n        </button>\n        <div class="line"></div>\n        <slot></slot>\n      </div>\n      `;const e=this.shadowRoot.querySelector(".close");this.closeBtn=e,e.onclick=e=>{this.stop(e)}}disconnectedCallback(){this.closeBtn.onclick=null}scannerStart(){const t=document.createEvent("CustomEvent"),n=navigator.mediaDevices,s=e=>{t.initCustomEvent("qrscan",!0,!0,{error:e}),this.dispatchEvent(t)};n?n.getUserMedia({video:{facingMode:"environment"}}).then((n=>{this.mediaStream=n;const o=this.shadowRoot.querySelector("video");(new e).decodeFromStream(n,o,(e=>{e&&(t.initCustomEvent("qrscan",!0,!0,e),this.dispatchEvent(t))})).catch(s)})).catch(s):setTimeout((()=>{t.initCustomEvent("qrscan",!0,!0,{error:{message:"no mediaDevices, only work on https"}}),this.dispatchEvent(t)}),0)}stop(e){const t=document.createEvent("CustomEvent");this.mediaStream&&this.mediaStream.getTracks()[0].stop(),t.initCustomEvent("stop",!0,!0,e),this.dispatchEvent(t)}}customElements.define("qr-scanner",t);class n{constructor(e){this.callback=e;const t=document.createElement("qr-scanner");this.scanner=t,document.body.appendChild(t);const n=this.qrscanHandler();this.handler=this.handler,t.addEventListener("qrscan",n,!1);t.addEventListener("stop",(()=>{this.scanner.style.display="none"}),!1),this.start()}qrscanHandler(){const e=this.callback;return t=>{e(t.detail)}}start(){customElements.whenDefined("qr-scanner").then((()=>{this.scanner.scannerStart()}))}show(){this.start(),this.scanner.style.display="block",this.scanner.addEventListener("qrscan",this.handler,!1)}hidden(){this.scanner.stop(),this.scanner.style.display="none"}stop(){this.scanner.stop(),this.scanner.removeEventListener("qrscan",this.handler),document.body.removeChild(this.scanner)}}const s=document.querySelector("qr-scanner");customElements.whenDefined("qr-scanner").then((()=>s.scannerStart())),s.addEventListener("qrscan",(e=>{const t=e.detail.text?"text is :"+e.detail.text:"error:"+e.detail.error.message;alert(t)}),!1),s.addEventListener("close",(e=>{document.body.remove(s)}),!1);const o=document.querySelector("#start"),r=document.querySelector("#stop");o.onclick=()=>{s.scannerStart()},r.onclick=()=>{s.stop()};const i=function(e){e.text?alert("text:"+e.text):alert("error:"+e.error.message)},a=document.querySelector("#f-create"),c=document.querySelector("#f-show"),d=document.querySelector("#f-hidden");let l;a.onclick=()=>{l=new n(i)},c.onclick=()=>{l.show()},d.onclick=()=>{l.hidden()};
